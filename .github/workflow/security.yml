name: PolyPrep Security Checks

on:
  push:
    branches: [devsec]
  pull_request:
    branches: [devsec]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      has-go: ${{ steps.filter.outputs.go == 'true' }}
      has-python: ${{ steps.filter.outputs.python == 'true' }}
      has-js: ${{ steps.filter.outputs.js == 'true' }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Identify changed file types
        id: filter
        uses: tj-actions/changed-files@v42
        with:
          files: |
            **/*.go
            **/*.py
            **/*.js
            **/*.ts

  go-checks:
    needs: detect-changes
    if: needs.detect-changes.outputs.has-go == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      
      - name: Install Go security tools
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          go install github.com/securego/gosec/v2/cmd/gosec@latest
      
      - name: Run golangci-lint
        run: golangci-lint run ./...
      
      - name: Run gosec
        run: gosec -fmt=json ./... > gosec-report.json || true
      
      - name: Upload gosec report
        uses: actions/upload-artifact@v3
        with:
          name: gosec-report
          path: gosec-report.json

  python-checks:
    needs: detect-changes
    if: needs.detect-changes.outputs.has-python == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install Python security tools
        run: |
          pip install bandit safety pylint
      
      - name: Run Bandit
        run: bandit -r PolyPrep/ -f json -o bandit-report.json || true
      
      - name: Run Safety
        run: safety check --json --output safety-report.json || true
      
      - name: Run Pylint
        run: pylint --output-format=json PolyPrep/ > pylint-report.json || true
      
      - name: Upload Python reports
        uses: actions/upload-artifact@v3
        with:
          name: python-reports
          path: |
            bandit-report.json
            safety-report.json
            pylint-report.json

  js-checks:
    needs: detect-changes
    if: needs.detect-changes.outputs.has-js == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install JS dependencies
        working-directory: ./PolyPrep/static/js
        run: npm install
      
      - name: Run npm audit
        working-directory: ./PolyPrep/static/js
        run: npm audit --json > npm-audit.json || true
      
      - name: Run Snyk
        working-directory: ./PolyPrep/static/js
        run: npx snyk test --json > snyk-report.json || true
      
      - name: Upload JS reports
        uses: actions/upload-artifact@v3
        with:
          name: js-reports
          path: |
            PolyPrep/static/js/npm-audit.json
            PolyPrep/static/js/snyk-report.json